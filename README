This is the README for Aesalon.

Aesalon is a program to monitor the dynamically-allocated memory of another
program. It uses ptrace and some trickery with DWARF debugging information to
form a reference counter that is then used to display statistics on the memory
allocated.

-- What is required to run aesalon
In order to run the aesalon monitor on a program, it simply must have been
compiled with debugging information, in the DWARF format. Beyond that, the
operating system utilized must be a Linux derivative (see note below, in the
compilation section).

Currently, the only implemented graphical display utilizes Qt4. However,
aesalon communicates information from the monitor to the display with TCP
network sockets; therefore it is entirely possible to monitor a program
remotely.

-- What is required to compile aesalon
The monitor is written in 95% c++0x-compatible C++, but utilizes a few GNU
extensions to libc (getopt_long, etc). Also, the monitor is partially Linux-
specific, but that could change in the future if someone using BSD or similar
is interested enough to request a port. This means, in essence, that you need
a Linux-based operating system, g++ (tested with 4.4, but 4.3 or earlier
should also work), and a non-ancient version of libstdc++.

The GUI is written using Qt, so any platform that supports Qt will also
support the monitor (in theory -- some Qt extensions are used that may not be
available on some platforms, such as OpenGL rendering, etc.)

CMake is used as the buildsystem for both the monitor and the GUI (tested with
2.6 and 2.8).

-- How to compile aesalon
First, edit the build.config file to change what is built, and what is not
built. The only thing that most users will need to change is the PLATFORM
variable. Currently, only x86_64 is actually supported (with x86 support
partially implemented), though ports to other platforms are certainly welcome.

Run 'cmake .' in the project root directory once you are done. This will
generate the Makefiles required to actually build aesalon. Once that is done,
run 'make', and that should be all that is required. The two symlinks in the
project root directory (aesalon and aesalon_gui) should get you started.

Good luck, and happy hacking!

 -- strange <kawk256@gmail.com>

