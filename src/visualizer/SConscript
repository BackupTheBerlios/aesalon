import sys
import subprocess

Import("qtEnv")

env = qtEnv.Clone()

env.Replace(QT4_MOCHSUFFIX = ".cpp")
env.Replace(QT4_MOCHPREFIX = "#.build/visualizer/moc_")
env.Replace(QT4_QRCCXXPREFIX = ".build/qrc_")

automocPath = [
	"#src/visualizer/",
	"#include/visualizer/"]

dirType = type(Dir("."))

for item in Glob("#src/visualizer/*") + Glob("#include/visualizer/*"):
	if type(item) == dirType:
		automocPath += [str(item)]

env.Replace(QT4_AUTOMOC_CPPPATH = automocPath)

env.EnableQt4Modules(["QtCore", "QtGui", "QtNetwork"])

env.Append(CPPPATH = ["#include/"])
env.Append(CCFLAGS = ["-W", "-Wall", "-g", "-DAesalonVisualizer"])
env.Append(LINKFLAGS = ["-rdynamic"])
env.Append(LINKFLAGS = ["-Xlinker", "--whole-archive", "-laesalon-config", "-laesalon-util", "-laesalon-storage", "-laesalon-artisan", "-Xlinker", "--no-whole-archive"])
env.Append(LIBS = ["rt", "dl"])

sourceFiles = Glob("*.cpp", strings=True) + Glob("*/*.cpp", strings=True) + Glob("*.qrc", strings=True)

visualizer = env.Program(target = "aesalon_visualizer", source = sourceFiles)

Import(["util", "config", "storage", "artisan"])
Depends(visualizer, [util, config, storage, artisan])

