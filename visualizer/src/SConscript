import sys
import subprocess

Import("qtEnv")

env = qtEnv

projectRoot = env.Dictionary()["projectRoot"] + "/"

env.Replace(QT4_MOCHSUFFIX = ".cpp")
env.Replace(QT4_MOCHPREFIX = projectRoot + "visualizer/build/moc_")
env.Replace(QT4_QRCCXXPREFIX = projectRoot + "visualizer/build/qrc_")

automocPath = [
	projectRoot + "visualizer/src/",
	projectRoot + "include/visualizer/"]

dirType = type(Dir("."))

for item in Glob(projectRoot + "visualizer/src/*") + Glob(projectRoot + "include/visualizer/*"):
	if type(item) == dirType:
		automocPath += [str(item)]

env.Replace(QT4_AUTOMOC_CPPPATH = automocPath)

env.EnableQt4Modules(["QtCore", "QtGui", "QtNetwork"])

visualizerIncludePath = env.Dictionary()["includeRoot"] + "/visualizer"

env.Append(CPPPATH = [visualizerIncludePath])
env.Append(CCFLAGS = ["-W", "-Wall", "-g", "-DAesalonVisualizer"])

sourceFiles = Glob("*.cpp", strings=True) + Glob("*/*.cpp", strings=True) + Glob("*.qrc", strings=True)

env.Program(target = "aesalon_visualizer", source = sourceFiles)
