# General configuration

# The directory-specific config file path.
set(DIR_CONFIG_PATH ".aesalon.conf")
# The default user-specific config file path.
set(USER_CONFIG_PATH "~/.config/aesalon/aesalon.conf")
# The default system-wide config file path.
set(SYS_CONFIG_PATH "/etc/default/aesalon")

# NOTE: These options can be overridden in the configuration files.

# The storage chunk size. The larger, the less wasted memory, but the more
# memory is allocated by default. The smaller, the more processing power used
# to reduce fragmentation. ~10 MB is probably a good size unless you're
# monitoring a program like Firefox. Overridable via run-time configuration,
# so just leave this alone unless you know that you'll be monitoring lots of
# very small or very large programs.
set(CHUNK_SIZE 10485760)

# The default shared memory map size. The larger it is, then the more memory
# is reserved for storing information from the overload library. Too small,
# and a waiting condition may occur; too large, and memory is wasted. Minimum
# size is theoretically about 64 bytes if you have backtraces disabled, but
# this size should be multiples of the page size for your system (e.g. 4096
# bytes for most GNU/Linux systems). 10MB is probably a relatively good size.
set(SHM_SIZE 10485760)

# The default path to libc. This is probably not right, so running the config
# generation script is probably a good idea.
set(LIBC_PATH "/lib/libc.so.6")
# The default TCP port to use. Change this if 6321 is taken already or blocked
# by your personal firewall.
set(DEFAULT_PORT 6321)

# Build configuration

# If DEVELOPMENT_BUILD is true, then aesalon will output some debugging
# information, and behave slightly differently. Such information and behaviour
# may slow down performance, however.
set(DEVELOPMENT_BUILD true)
# If PROFILE_BUILD is true, then aesalon will be compiled with -pg, to
# produce profiling information. A profiled build is much less efficient than
# a non-profiled build.
set(PROFILE_BUILD false)
# If USE_OVERLOAD_LIBRARY is true, then LD_PRELOAD will be used to gather
# allocation data. If your platform does not support LD_PRELOAD, or if you
# wish to not use it for other reasons, disable this. Note that not using
# the overload library may result in a very large performance hit.
#
# NOTE: currently, the overload library is the only method of gathering data.
# Do not disable it.
set(USE_OVERLOAD_LIBRARY true)

# Build the monitor?
set(BUILD_MONITOR true)
# Build the GUI?
set(BUILD_GUI true)
# Build the sample programs?
set(BUILD_TESTS true)

# Only applicable if the monitor is being built.
# AESALON_PLATFORM can be:
#   0: linux x86
#   1: linux x86-64 (sometimes known as amd64)
set(AESALON_PLATFORM        1)

